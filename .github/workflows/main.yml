name: React CI

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }} # Project ID from lachezar account
  SERVICE: react-app # Google Cloud Run service name
  REGION: europe-west4

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  git_guardian:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    continue-on-error: true # This ensures that subsequent jobs will run even if this job fails.
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        uses: GitGuardian/ggshield/actions/secret@v1.25.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        working-directory: ./frontend
        run: npm install
      
      # Reintroduce Lint without failing the build
      - name: Lint (Non-Failing)
        working-directory: ./frontend
        run: npm run lint || echo "Lint errors detected, but proceeding with build."
      
      # Uncomment when you have tests
      #- name: Run Tests
      #  working-directory: ./frontend
      #  run: npm test

      - name: Build
        working-directory: ./frontend
        run: npm run build

  docker-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configure Docker to use gcloud
        run: gcloud auth configure-docker europe-west4-docker.pkg.dev
      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64 \
            --tag europe-west4-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/my-docker-repo/react-app:latest \
            --tag europe-west4-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/my-docker-repo/react-app:${{ github.sha }} \
            --push \
            ./frontend
      - name: List Docker Images
        run: docker images
      - name: Show Docker Build Logs
        run: docker logs $(docker ps -q -l)

  deploy:
    needs: docker-publish
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --image europe-west4-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/my-docker-repo/react-app:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --port 80 \
            --allow-unauthenticated
      - name: List Cloud Run Services
        run: gcloud run services list --platform managed --region ${{ env.REGION }}
      - name: Get Cloud Run Logs
        run: |
          gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=${{ env.SERVICE }}" --limit 10 --format "json"
