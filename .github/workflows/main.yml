name: React CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  git_guardian:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    continue-on-error: true # This ensures that subsequent jobs will run even if this job fails.
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        uses: GitGuardian/ggshield/actions/secret@v1.25.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Dependencies
      working-directory: ./frontend
      run: npm install

    # Reintroduce Lint without failing the build
    - name: Lint (Non-Failing)
      working-directory: ./frontend
      run: npm run lint || echo "Lint errors detected, but proceeding with build."

    # Uncomment when you have tests
    #- name: Run Tests
    #  working-directory: ./frontend
    #  run: npm test

    - name: Build
      working-directory: ./frontend
      run: npm run build
      
  docker-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configure Docker to use gcloud
        run: gcloud auth configure-docker europe-west4-docker.pkg.dev
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: europe-west4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-docker-repo/react-app:latest,europe-west4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-docker-repo/react-app:${{ github.sha }}
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy react-app \
            --image europe-west4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-docker-repo/react-app:latest \
            --platform managed \
            --region europe-west4 \
            --allow-unauthenticated \
            --service-account=lachezar@upheld-flow-423619-t0.iam.gserviceaccount.com \
            --timeout=20m
      - name: Get Service URL
        run: |
          SERVICE_URL=$(gcloud run services describe react-app --region europe-west4 --format "value(status.url)")
          echo "Service URL: $SERVICE_URL"
