name: React CI

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: react-app # Google Cloud Run service name
  REGION: europe-west4

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  git_guardian:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    continue-on-error: true # This ensures that subsequent jobs will run even if this job fails.
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        uses: GitGuardian/ggshield/actions/secret@v1.25.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Dependencies
      working-directory: ./frontend
      run: npm install

    # Reintroduce Lint without failing the build
    - name: Lint (Non-Failing)
      working-directory: ./frontend
      run: npm run lint || echo "Lint errors detected, but proceeding with build."

    # Uncomment when you have tests
    #- name: Run Tests
    #  working-directory: ./frontend
    #  run: npm test

    - name: Build
      working-directory: ./frontend
      run: npm run build
      
  deploy:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Authenticate Docker to Artifact Registry
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" > ${HOME}/gcloud-service-key.json
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud auth configure-docker europe-west4-docker.pkg.dev

      - name: Build and Push Docker image
        run: |
          docker build -t europe-west4-docker.pkg.dev/upheld-flow-423619-t0/my-docker-repo/my-app:latest .
          docker push europe-west4-docker.pkg.dev/upheld-flow-423619-t0/my-docker-repo/my-app:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy my-app \
            --image europe-west4-docker.pkg.dev/upheld-flow-423619-t0/my-docker-repo/my-app:latest \
            --platform managed \
            --region europe-west4 \
            --allow-unauthenticated
